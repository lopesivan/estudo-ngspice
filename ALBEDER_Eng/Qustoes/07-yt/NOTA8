O comando **`.CSPARAM`** no ngspice serve para **definir parÃ¢metros que ficam
disponÃ­veis dentro de uma seÃ§Ã£o `.control`**.

ğŸ”‘ DiferenÃ§a principal em relaÃ§Ã£o ao `.PARAM`:

* `.PARAM` define parÃ¢metros avaliados **antes da simulaÃ§Ã£o**
(no setup do circuito).
* `.CSPARAM` permite criar parÃ¢metros que podem ser manipulados e usados
**dentro do bloco de controle**, ou seja, durante execuÃ§Ã£o de scripts de
controle interativo.

ğŸ“Œ Exemplo do manual:

```spice
* test csparam
.param TEMPS = 27
.csparam newt = {3*TEMPS}
.csparam mytemp = â€™2 + TEMPSâ€™

.control
echo $&newt $&mytemp
.endc
.end
```

Nesse caso:

* `TEMPS` Ã© definido com `.param`.
* `newt` e `mytemp` sÃ£o definidos com `.csparam`.
* Dentro do bloco `.control ... .endc`, vocÃª pode acessar esses valores com
* `echo $&nome_param`.

ğŸ‘‰ Assim, o `.CSPARAM` Ã© especialmente Ãºtil quando vocÃª quer **passar valores
calculados para a parte de controle**, como loops, condiÃ§Ãµes, ou scripts
automatizados no ngspice.

Quer que eu monte um exemplo prÃ¡tico onde vocÃª controla a temperatura de
simulaÃ§Ã£o usando `.csparam` dentro de um `.control`?

